import lit.formats
import lit.util
import os
import sys
import platform
import string
import re
import subprocess
import glob

if (config.plugins_supported):
    config.available_features.add('Plugins')
    config.environment['LLVM_CONFIG'] = os.path.join(config.llvm_tools_dir, 'llvm-config')
    config.environment['LLVM_VERSION'] = str(config.llvm_version)

    plugin_compile_flags = [ '-I' + config.ldc2_source_dir,
                             '--d-version=IN_LLVM',
                             '-J' + config.ldc2_source_dir + '/dmd/res',
                             '--shared',
                             '--defaultlib=',
                           ]
    if (platform.system() == 'Darwin'):
        plugin_compile_flags.append('-L-Wl,-undefined,dynamic_lookup')
    config.substitutions.append( ('%plugin_compile_flags', " ".join(plugin_compile_flags) ) )

    # Set feature that tells us that the just-built LDC is ABI compatible with the host D compiler
    # Be conservative: only set it when host LDC and just-built LDC have identical versions
    command = [config.ldc2_bin, '--version']
    p = subprocess.Popen(command, stdout=subprocess.PIPE, stderr=subprocess.PIPE, universal_newlines=True)
    text1 = p.stdout.readline() # Ex.: "LDC - the LLVM D compiler (1.33.0-git-716f627)"
    text2 = p.stdout.readline() # Ex.: "  based on DMD v2.103.1 and LLVM 14.0.0"
    text3 = p.stdout.readline() # Ex.: "  built with LDC - the LLVM D compiler (1.33.0-beta2)"
    m = re.compile('LDC - the LLVM D compiler \((.*)\)').match(text1)
    ldc_version = m.group(1)
    m3 = re.compile('  built with.* \((.*)\)').match(text3)
    host_version = m3.group(1)
    if (ldc_version == host_version):
        config.available_features.add('ABI_compatible_with_host_D')


