name: 2-build-bootstrap
inputs:
  cmake_flags:
    required: false
    default: ''
  arch:
    required: false # Windows only
runs:
  using: composite
  steps:
    - shell: bash
      run: |
        cmake --version
        ninja --version

    - name: 'Posix: Build bootstrap LDC'
      if: runner.os != 'Windows'
      shell: bash
      run: |
        set -eux
        cd ..
        mkdir bootstrap-ldc
        cd bootstrap-ldc
        cmake -G Ninja ../ldc \
          -DCMAKE_BUILD_TYPE=Release \
          -DLLVM_ROOT_DIR="$PWD/../llvm" \
          -DD_COMPILER=ldmd2 \
          -DBUILD_SHARED_LIBS=OFF \
          -DLDC_LINK_MANUALLY=OFF \
          ${{ inputs.cmake_flags }}
        ninja
    # Windows: invoke CMake & ninja in MSVC env
    - name: 'Windows: Build bootstrap LDC'
      if: runner.os == 'Windows'
      shell: cmd
      run: |
        call "%LDC_VSDIR%\Common7\Tools\VsDevCmd.bat" -arch=${{ inputs.arch }}
        echo on
        cd ..
        mkdir bootstrap-ldc
        cd bootstrap-ldc
        cmake -G Ninja ../ldc ^
          -DCMAKE_BUILD_TYPE=Release ^
          "-DLLVM_ROOT_DIR=%CD%\..\llvm" ^
          -DD_COMPILER=ldmd2 ^
          -DBUILD_SHARED_LIBS=OFF ^
          -DLDC_LINK_MANUALLY=OFF ^
          ${{ inputs.cmake_flags }}
        if %errorlevel% neq 0 exit /b %errorlevel%
        ninja || exit /b

    - run: ../bootstrap-ldc/bin/ldc2 --version
      shell: bash
