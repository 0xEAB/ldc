#---------------------------------#
#      general configuration      #
#---------------------------------#

#version: 1.0.{build}-{branch}

#branches:
#  only:
#    - appveyor

# Do not build on tags (GitHub only)
skip_tags: true

#---------------------------------#
#    environment configuration    #
#---------------------------------#

# Operating system (build VM template)
os: Visual Studio 2015

cache:
  # Cache the compressed pre-built LLVM for as long as this
  # Appveyor configuration isn't changed
  - c:\projects\llvm-x64.7z -> appveyor.yml

# scripts that are called at very beginning, before repo cloning
init:
  - git config --global core.autocrlf input
  - '"c:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" amd64'
  - msbuild /version
  - cl
  - cmake --version
  - python --version

# scripts that run after cloning repository
install:
  - cd c:\projects
  # Fetch submodules
  - cd ldc
  - git submodule update --init --recursive
  - cd ..
  # Clone libconfig
  - git clone https://github.com/hyperrealm/libconfig.git libconfig
  ## Download & extract LLVM source
  #- ps: Start-FileDownload 'http://llvm.org/pre-releases/3.7.0/rc3/llvm-3.7.0rc3.src.tar.xz' -FileName 'llvm.src.tar.xz'
  #- 7z x llvm.src.tar.xz -so | 7z x -si -ttar > nul
  #- ren llvm-3.7.0rc3.src llvm
  # Download a pre-built LLVM if not cached & extract
  - ps: If (-Not (Test-Path llvm-x64.7z)) { Start-FileDownload 'https://dl.dropboxusercontent.com/s/xfbl0u0sfa7ifx5/llvm-x64.7z?dl=0' -FileName 'llvm-x64.7z' -Timeout 600000 }
  - 7z x llvm-x64.7z > nul
  # Download & install Ninja
  - ps: Start-FileDownload 'https://github.com/martine/ninja/releases/download/v1.6.0/ninja-win.zip' -FileName 'ninja.zip'
  - md ninja
  - cd ninja
  - 7z x ..\ninja.zip
  - cd ..
  - set PATH=c:\projects\ninja;%PATH%
  - ninja --version
  # Download & extract libcurl
  - ps: Start-FileDownload 'http://d.darktech.org/libcurl-7.43.0-WinSSL-zlib-x86-x64.zip' -FileName 'libcurl.zip'
  - md libcurl
  - cd libcurl
  - 7z x ..\libcurl.zip
  - cd ..
  # Copy libcurl.dll to final LDC installation directory and add to PATH
  - md ldc-x64
  - md ldc-x64\bin
  - copy libcurl\dmd2\windows\bin64\libcurl.dll ldc-x64\bin
  - set PATH=c:\projects\ldc-x64\bin;%PATH%
  # Copy curl.lib to final LDC installation directory and add to LIB
  - md ldc-x64\lib
  - copy libcurl\dmd2\windows\lib64\curl.lib ldc-x64\lib
  - set LIB=c:\projects\ldc-x64\lib;%LIB%

#---------------------------------#
#       build configuration       #
#---------------------------------#

before_build:
  - cd c:\projects
  # Build libconfig
  - msbuild libconfig\lib\libconfig.vcxproj /p:Configuration=ReleaseStatic /p:Platform=x64
  ## Generate build files for LLVM, build & install
  #- md ninja-llvm
  #- cd ninja-llvm
  #- cmake -G Ninja -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_INSTALL_PREFIX=c:\projects\llvm-x64 -DLLVM_TARGETS_TO_BUILD=X86 -DLLVM_INCLUDE_TESTS=OFF -DLLVM_INCLUDE_EXAMPLES=OFF -DLLVM_ENABLE_ASSERTIONS=ON -DLLVM_APPEND_VC_REV=ON ..\llvm
  #- ninja install

build_script:
  - cd c:\projects
  # Generate build files for LDC & build
  - md ninja-ldc
  - cd ninja-ldc
  - cmake -G Ninja -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_INSTALL_PREFIX=c:\projects\ldc-x64 -DLLVM_ROOT_DIR=c:/projects/llvm-x64 -DLIBCONFIG_INCLUDE_DIR=c:/projects/libconfig/lib -DLIBCONFIG_LIBRARY=c:/projects/libconfig/lib/x64/ReleaseStatic/libconfig.lib ..\ldc
  - ninja

after_build:

#---------------------------------#
#       test configuration        #
#---------------------------------#

before_test:

test_script:
  # Just compile, link & execute a hello-world program for now
  - cd c:\projects
  - ps: 'echo "import std.stdio; void main() { writeln(""Hello world!""); }" > hello.d'
  - ninja-ldc\bin\ldc2 hello.d -Llegacy_stdio_definitions.lib -L/FORCE:MULTIPLE
  - hello.exe

after_test:
  # Install LDC
  - cd c:\projects\ninja-ldc
  - ninja install

#---------------------------------#
#      artifacts configuration    #
#---------------------------------#

artifacts:
  # Push entire LDC installation directory as a zip archive
  - path: ..\ldc-x64
